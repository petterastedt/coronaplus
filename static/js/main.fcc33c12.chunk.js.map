{"version":3,"sources":["components/Header/Header.js","components/Search/Search.js","components/Filter/Filter.js","components/ListItem/ListItem.js","components/Loading/Loading.js","components/GlobalStats/GlobalStats.js","components/StatsSummary/StatsSummary.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Search","props","placeholder","onChange","e","preventDefault","searchFilter","target","value","handleOnChange","autoComplete","Filter","sort","countries","action","slice","a","b","nonCriticalPercent","country","cases","recoveredPercent","type","defaultChecked","hide","hideDeaths","activeFilter","first","onClick","sorted","countriesState","sortCountriesData","setFilter","second","third","fourth","filter","setSearchFilter","threshold","ListItem","src","itemData","countryInfo","flag","alt","title","key","i","todayDeaths","todayCases","daysWithoutDeaths","toFixed","recoveredYesterday","recovered","replace","active","deaths","Loading","GlobalStats","globalData","end","separator","suffix","delay","decimals","duration","updated","StatsSummary","mostRecovered","noDeaths","length","map","item","index","criticalLessThanFive","recoveredMostDifference","recoveredDifference","Footer","href","rel","App","useState","setGlobalData","countriesData","setCountriesData","filterInput","setFilterInput","setHideDeaths","setActiveFilter","covid","NovelCovid","useEffect","countriesCalculted","getCountriesCalculations","getHistorical","countriesHistorical","countriesHistoricalFiltered","filterLastWeek","mergedData","mergeData","all","global","globalCalculted","getAllCalculations","getPercent","value1","value2","value3","countriesFiltered","console","log","historical","promises","Promise","countriesArray","forEach","arr","timeline","hasOwnProperty","push","countryData","historicalData","historicalAll","reverse","c","toUpperCase","Object","values","Math","abs","data","Date","toLocaleString","dataFiltered","criticalPercent","critical","activePercent","formattedFilter","charAt","includes","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fcc33c12.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => (\r\n  <div className=\"header\">\r\n    <div className=\"headerWrapper\">\r\n      <h1 className=\"header-title\">CORONA<span>+</span></h1>\r\n      {/* <div className=\"header-subtitle\">POSITIVE STATISTICS</div> */}\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst Search = props => {\r\n  const handleOnChange = (e) => {\r\n\t\te.preventDefault()\r\n\t\tprops.searchFilter(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <div className=\"search\">\r\n      <input\r\n        className=\"search-field\"\r\n        placeholder=\"Search country..\"\r\n        onChange={(e) => handleOnChange(e)}\r\n        autoComplete=\"off\"\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Search\r\n","import React from 'react'\r\nimport Search from './../Search/Search'\r\n\r\nconst Filter = props => {\r\n  const sort = (countries, action) => {\r\n    switch(action) {\r\n      case 'sortByNonCritical':\r\n        return countries.slice().sort((a, b) => (a.nonCriticalPercent < b.nonCriticalPercent) ? 1 : -1)\r\n      case 'sortByName':\r\n        return countries.slice().sort((a, b) => (a.country > b.country) ? 1 : -1)\r\n        case 'sortByCases':\r\n        return countries.slice().sort((a, b) => (a.cases < b.cases) ? 1 : -1)\r\n      case 'sortByRecovered':\r\n        return countries.slice().sort((a, b) => (a.recoveredPercent < b.recoveredPercent) ? 1 : -1)\r\n      default:\r\n        return countries.slice().sort((a, b) => (a.recoveredPercent < b.recoveredPercent) ? 1 : -1)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"filter\">\r\n      <div className=\"filter-checkbox\">\r\n        <input type=\"checkbox\"\r\n          defaultChecked={false} \r\n          onChange={() => {\r\n            props.hide(!props.hideDeaths)\r\n          }\r\n        } />\r\n        <span>Show deaths</span>\r\n      </div>\r\n      <div className=\"filterListWrapper\">\r\n        <div className=\"filterListSearchWrapper\">\r\n          <div className=\"filterCategoriesWrapper\">\r\n            <span className=\"filterList-label\">Sort by: </span>\r\n            <ul className=\"filterList resetList\">\r\n              <li className={`filterList-item ${props.activeFilter.first ? \"filterList-item--active\" : \"\"}`}\r\n                onClick={() => {\r\n                  let sorted = sort(props.countriesState, 'sortByRecovered')\r\n                  let newFilter = {\r\n                    first: true,\r\n                    second: false,\r\n                    third: false,\r\n                    fourth: false\r\n                  }\r\n                  props.sortCountriesData(sorted)\r\n                  props.setFilter(newFilter)\r\n                }\r\n              }>Recovered</li>\r\n\r\n              <li className={`filterList-item ${props.activeFilter.second ? \"filterList-item--active\" : \"\"}`}\r\n                onClick={() => {\r\n                  let sorted = sort(props.countriesState, 'sortByNonCritical')\r\n                  let newFilter = {\r\n                    first: false,\r\n                    second: true,\r\n                    third: false,\r\n                    fourth: false\r\n                  }\r\n                  props.sortCountriesData(sorted)\r\n                  props.setFilter(newFilter)\r\n                }\r\n              }>Mild cases</li>\r\n\r\n              <li className={`filterList-item ${props.activeFilter.third ? \"filterList-item--active\" : \"\"}`}\r\n                onClick={() => {\r\n                  let sorted = sort(props.countriesState, 'sortByName')\r\n                  let newFilter = {\r\n                    first: false,\r\n                    second: false,\r\n                    third: true,\r\n                    fourth: false\r\n                  }\r\n                  props.sortCountriesData(sorted)\r\n                  props.setFilter(newFilter)\r\n                }\r\n              }>Country</li>\r\n\r\n              <li className={`filterList-item ${props.activeFilter.fourth ? \"filterList-item--active\" : \"\"}`}\r\n                onClick={() => {\r\n                  let sorted = sort(props.countriesState, 'sortByCases')\r\n                  let newFilter = {\r\n                    first: false,\r\n                    second: false,\r\n                    third: false,\r\n                    fourth: true\r\n                  }\r\n                  props.sortCountriesData(sorted)\r\n                  props.setFilter(newFilter)\r\n                }\r\n              }>Total cases</li>\r\n            </ul>\r\n          </div>\r\n          <Search\r\n            searchFilter={(filter) => props.setSearchFilter(filter)} />\r\n        </div>\r\n        <span className=\"filterList-subtitle\">Only showing countries with over {props.threshold} cases</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst ListItem = props => (\r\n  <li className=\"listItem\">\r\n      <div className=\"listItem-titleWrapper\">\r\n        <div className=\"listItem-title\">\r\n          <span className=\"listItem-flag\">\r\n            <img src={props.itemData.countryInfo.flag}\r\n              alt={`Flag of ${props.itemData.country}`}\r\n              title={`Flag of ${props.itemData.country}`}\r\n              key={props.i}\r\n              className=\"listItem-flag\"/>\r\n          </span>\r\n          <h2 className=\"listItem-countryname\">{props.itemData.country}</h2>\r\n        </div>\r\n        <div className=\"listItem-alertWrapper\">\r\n          { props.itemData.todayDeaths === 0 && props.itemData.todayCases === 0 &&\r\n            <div className=\"listItem-noData highlighted highlightTag\">No new data since yesterday</div>\r\n          }\r\n          { props.itemData.todayDeaths === 0 && props.itemData.todayCases > 0 &&\r\n            <div className=\"listItem-noDeaths highlighted highlightTag\">No reported deaths today!</div>\r\n          }\r\n          { props.itemData.daysWithoutDeaths > 1 && props.itemData.daysWithoutDeaths < 7 && props.itemData.todayDeaths === 0 ? <div className=\"listItem-noDeaths highlighted highlightTag\">No reported deaths the past {props.itemData.daysWithoutDeaths} days!</div>\r\n            : props.itemData.daysWithoutDeaths > 6 && props.itemData.todayDeaths === 0 ? <div className=\"listItem-noDeaths highlighted highlightTag\">No reported deaths in 7+ days!</div>\r\n            : \"\"\r\n          }\r\n        </div>\r\n      </div>\r\n      <ul className=\"listItem-stats resetList\">\r\n        <li className=\"recovered listItem-statsItem\">\r\n          <span className={`title ${props.activeFilter.first === true ? \"listItem--filterIsActive\" : \"\"}`}>\r\n            Recovered:\r\n          </span>\r\n          <div className=\"listItem-recoveredWrapper\">\r\n            <span className={`percent ${props.activeFilter.first === true ? \"highlighted\" : \"\"}`}>\r\n              {props.itemData.recoveredPercent.toFixed(2)}%\r\n            </span>\r\n            { props.itemData.recoveredPercent > props.itemData.recoveredYesterday ? <div className=\"highlighted plus\" title=\"Percent of recovered increased since yesterday\">&#8593;</div>\r\n              : props.itemData.recoveredPercent === props.itemData.recoveredYesterday ? <div className=\"highlighted equal\" title=\"No change since yesterday\">-</div>\r\n              : <div className=\"highlighted minus\" title=\"Percent of recovered decreased since yesterday\">&#8595;</div>\r\n            }\r\n            <span>\r\n              ({props.itemData.recovered.toFixed().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")})\r\n            </span>\r\n          </div>\r\n        </li>\r\n        <li className=\"nonCritical listItem-statsItem\">\r\n          <span className={`title ${props.activeFilter.second === true ? \"listItem--filterIsActive\" : \"\"}`}>\r\n            Mild cases:\r\n          </span>\r\n          <span className={`${props.activeFilter.second === true ? \"highlighted\" : \"\"}`}>\r\n            {props.itemData.nonCriticalPercent.toFixed(2)}%\r\n          </span>\r\n        </li>\r\n        <li className=\"active listItem-statsItem\">\r\n          <span className=\"title\">\r\n            Active cases:\r\n          </span>\r\n          {props.itemData.active.toFixed().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n        </li>\r\n        <li className=\"cases listItem-statsItem\">\r\n          <span className={`title ${props.activeFilter.fourth === true ? \"listItem--filterIsActive\" : \"\"}`}>\r\n            Total cases:\r\n          </span>\r\n          <span className={`${props.activeFilter.fourth === true ? \"listItem--filterIsActive\" : \"\"}`}>\r\n            {props.itemData.cases.toFixed().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n          </span>\r\n        </li>\r\n          { !props.hideDeaths &&\r\n            <li className=\"deaths listItem-statsItem\">\r\n              <span className=\"title\">\r\n                Total deaths:\r\n              </span>\r\n              <span className=\"deaths-number\">\r\n                {props.itemData.deaths.toFixed().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n              </span>\r\n            </li>\r\n          }\r\n      </ul>\r\n  </li>\r\n)\r\n\r\nexport default ListItem\r\n","import React from 'react'\r\n\r\nconst Loading = () => (\r\n  <div className=\"loading\">\r\n    Loading..\r\n  </div>\r\n)\r\n\r\nexport default Loading\r\n","import React from 'react'\r\nimport CountUp from 'react-countup';\r\nimport Loading from '../Loading/Loading'\r\n\r\nconst GlobalStats = props => (\r\n  <div className=\"globalStats componentSpacing\">\r\n    <div className=\"globalStatsTextWrapper\">\r\n      <div className=\"globalStats-total\">\r\n        <strong>Total cases: </strong>\r\n        { props.globalData ?\r\n          <span>{props.globalData.cases.toFixed().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</span> :\r\n          <Loading />\r\n        }\r\n          {}\r\n      </div>\r\n      <div className=\"globalStats-recovered highlighted\">\r\n        <strong>Recovered: </strong>\r\n        { props.globalData ?\r\n          <span>{props.globalData.recovered.toFixed().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</span> :\r\n          <Loading />\r\n        }\r\n        { props.globalData &&\r\n         <span className=\"highlighted globalStats-recoveredNumber\">\r\n          (<CountUp\r\n            end={props.globalData.recoveredPercent}\r\n            separator=\",\"\r\n            suffix=\"%\"\r\n            delay={0.3}\r\n            decimals={2}\r\n            duration={3.2} />)\r\n          </span>\r\n        }\r\n      </div>\r\n        { !props.hideDeaths &&\r\n          <div className=\"globalStats-deaths\">\r\n            <strong>Deaths: </strong>\r\n            <span>{props.globalData.deaths.toFixed().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</span>\r\n          </div>\r\n        }\r\n      <div className=\"globalStats-updated\">\r\n        <strong>Updated: </strong>\r\n        { props.globalData ? \r\n          <span>{props.globalData.updated}</span> :\r\n          <Loading />\r\n        }\r\n      </div>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default GlobalStats\r\n","import React from 'react'\r\n\r\nconst StatsSummary = props => (\r\n    <div className=\"statsSummary componentSpacing\">\r\n      <div className=\"statsSummary-title\">\r\n        Summary\r\n      </div>\r\n      <ul className=\"statsSummary-list\">\r\n        <li className=\"statsSummary-item\">\r\n          <strong className=\"country\">\r\n            {props.globalData.mostRecovered[0].country}\r\n          </strong>\r\n            has the highest amount of recovered patients <span className=\"highlighted\">({props.globalData.mostRecovered[0].recoveredPercent.toFixed()}%)</span>, followed by\r\n          <strong>\r\n            {props.globalData.mostRecovered[1].country}\r\n          </strong>\r\n          <span className=\"highlighted\">\r\n            ({props.globalData.mostRecovered[1].recoveredPercent.toFixed()}%)\r\n          </span>\r\n            and\r\n          <strong>\r\n            {props.globalData.mostRecovered[2].country}\r\n          </strong>\r\n          <span className=\"highlighted\">\r\n            ({props.globalData.mostRecovered[2].recoveredPercent.toFixed()}%)\r\n          </span>\r\n        </li>\r\n\r\n          { props.globalData.noDeaths.length > 0 &&\r\n            <li className=\"statsSummary-item\">\r\n              {props.globalData.noDeaths\r\n                .map((item, index) => <span className=\"highlighted\" key={index}>{item.country}{index === 0 && props.globalData.noDeaths.length === 2 && \" and \"}{index === 0 && props.globalData.noDeaths.length > 2 && \", \"} {index === 1 && props.globalData.noDeaths.length > 2 && \" and \"}</span>)\r\n                .slice(0, 3)}\r\n              {props.globalData.noDeaths.length > 3 && \"are some of the countries that\"} have had <strong>multiple days</strong> without any reported deaths.\r\n            </li>\r\n          }\r\n\r\n        <li className=\"statsSummary-item\">\r\n          In <span className=\"highlighted\">\r\n            {props.globalData.criticalLessThanFive.toFixed()}%\r\n          </span>\r\n            of the countries with active cases, <span className=\"highlighted\">less than 5% of them are critical.</span>*\r\n        </li>\r\n\r\n        { props.globalData.recoveredMostDifference.country &&\r\n          <li className=\"statsSummary-item\">\r\n            <strong className=\"country\">\r\n              {props.globalData.recoveredMostDifference.country}\r\n            </strong>\r\n            has the highest increase in recoveries from the past day with <span className=\"highlighted\">+{props.globalData.recoveredMostDifference.recoveredDifference.toFixed()}%</span>*\r\n          </li>\r\n        }\r\n\r\n      </ul>\r\n      <div className=\"listNotice\">\r\n        *Based on countries with at least {props.threshold} reported cases\r\n      </div>\r\n    </div>\r\n  )\r\n\r\nexport default StatsSummary\r\n","import React from 'react'\r\n\r\nconst Footer = () => (\r\n  <div className=\"footer componentSpacing\">\r\n    Created by <a href=\"https://www.petterastedt.com/\" target=\"_blank\" alt=\"Link to portifolio website\" rel=\"noopener noreferrer\">Petter Åstedt</a>.\r\n    See the code on <a href=\"https://github.com/petterastedt/\" target=\"_blank\" alt=\"Link to Github\" rel=\"noopener noreferrer\">Github</a>.\r\n  </div>\r\n)\r\n\r\nexport default Footer\r\n","import React, { useState, useEffect } from 'react'\nimport { NovelCovid } from 'novelcovid'\nimport Header from './components/Header/Header'\nimport Filter from './components/Filter/Filter'\nimport ListItem from './components/ListItem/ListItem'\nimport GlobalStats from './components/GlobalStats/GlobalStats'\nimport StatsSummary from './components/StatsSummary/StatsSummary'\nimport Footer from './components/Footer/Footer'\n\nconst App = () => {\n  const [globalData, setGlobalData] = useState(null)\n  const [countriesData, setCountriesData] = useState([])\n  const [filterInput, setFilterInput] = useState('')\n  const [hideDeaths, setHideDeaths] = useState(true)\n  const [activeFilter, setActiveFilter] = useState({ first: true })\n\n  const covid = new NovelCovid()\n  const threshold = 1000 // Only show countries with more than X cases\n\n  useEffect(() => {\n    (async () => {\n      // Current country data\n      let countries = await covid.countries()\n      let countriesCalculted = getCountriesCalculations(countries)\n\n      // Historical country data\n      let countriesHistorical = await getHistorical(countriesCalculted)\n      let countriesHistoricalFiltered = filterLastWeek(countriesHistorical)\n      let mergedData = mergeData(countriesCalculted, countriesHistoricalFiltered, countriesHistorical)\n\n      // Global data\n      let global = await covid.all()\n      let globalCalculted = getAllCalculations(global, mergedData)\n\n      // Set state\n      setCountriesData(mergedData.slice().sort((a, b) => (a.recoveredPercent < b.recoveredPercent) ? 1 : -1))\n      setGlobalData(globalCalculted)\n    })()\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  const getPercent = (value1, value2, value3) => value1 / (value2 - value3) * 100\n\n  const sortCountriesData = sorted => setCountriesData(sorted)\n  const hide = value => setHideDeaths(value)\n  const setFilter = filter => setActiveFilter(filter)\n  const setSearchFilter = filter => {\n    const formattedFilter = filter.charAt(0).toUpperCase() + filter.slice(1)\n    setFilterInput(formattedFilter)\n  }\n\n  const getHistorical = async countries => {\n    const countriesFiltered = countries.filter(country => country.country !== \"World\")\n    console.log(countriesFiltered)\n\n    const promises = await countriesFiltered.map(async country => await covid.historical(null, country.country))\n    return await Promise.all(promises)\n  }\n\n  const filterLastWeek = countries => {\n    const countriesArray = []\n    const amountOfDays = 7 // Number of days back in time to return\n    countries.forEach(country => {\n      const arr = []\n      for (let key in country.timeline.deaths) {\n        if (country.timeline.deaths.hasOwnProperty(key)) {\n          arr.push(country.timeline.deaths[key])\n        }\n      }\n      countriesArray.push(arr.slice(arr.length - amountOfDays))\n    })\n    return countriesArray\n  }\n\n  const mergeData = (countryData, historicalData, historicalAll) => {\n    console.log(\"test\", countryData)\n    let arr = []\n    countryData.forEach((country, i) => {\n      let daysWithoutDeaths = 0\n      let recoveredYesterday\n      let recoveredDifference\n      console.log(historicalData[0], i)\n\n      historicalData[i].reverse().forEach((item, index) => {\n        if (item === historicalData[i][0] && index !== 0 && item !== historicalData[i][index+1]) {\n          daysWithoutDeaths = index+1\n        }\n      })\n\n      historicalAll.forEach(c => {\n        if (country.country.toUpperCase() === c.country.toUpperCase()) {\n          let deaths = Object.values(c.timeline.deaths)[Object.values(c.timeline.deaths).length-1]\n          let cases = Object.values(c.timeline.cases)[Object.values(c.timeline.cases).length-1]\n          let recovered = Object.values(c.timeline.recovered)[Object.values(c.timeline.recovered).length-1]\n\n          recoveredYesterday = getPercent(recovered, cases, deaths)\n          recoveredDifference = Math.abs(country.recoveredPercent - recoveredYesterday)\n        }\n      })\n\n      arr.push({ ...country, historicalData: historicalData[i], daysWithoutDeaths, recoveredYesterday, recoveredDifference })\n    })\n    return arr\n  }\n\n  const getAllCalculations = (data, countriesData) => {\n    let updated = new Date(data.updated).toLocaleString('sv-SE')\n    let recoveredPercent = getPercent(data.recovered, data.cases, data.deaths)\n    let mostRecovered = countriesData.sort((a,b) => b.recoveredPercent - a.recoveredPercent).slice(0, 3)\n    let noDeaths = countriesData.filter(item => item.daysWithoutDeaths > 0 && item.todayDeaths === 0)\n    let criticalLessThanFive = countriesData.filter(item => item.nonCriticalPercent > 95).length / countriesData.length * 100\n    let recoveredMostDifference = countriesData.filter(item => item.recoveredYesterday > 0 && item.recoveredYesterday !== item.recoveredPercent).sort((a,b) => b.recoveredDifference - a.recoveredDifference)[0]\n\n    return { ...data, recoveredPercent, updated, mostRecovered, noDeaths, criticalLessThanFive, recoveredMostDifference }\n  }\n\n  const getCountriesCalculations = data => {\n    const dataFiltered = data.filter(country => country.country !== \"World\")\n\n    let updated = []\n    dataFiltered.forEach(item => {\n      if (item.cases > threshold) {\n        let recoveredPercent = getPercent(item.recovered, item.cases, item.deaths)\n        let criticalPercent =  getPercent(item.critical, item.cases, item.deaths)\n        let nonCriticalPercent = 100 - criticalPercent\n        let activePercent =  getPercent(item.active, item.cases, item.deaths)\n\n        updated.push({ ...item, recoveredPercent, criticalPercent, nonCriticalPercent, activePercent })\n      }\n    })\n    return updated\n  }\n\n  return (\n    <div className=\"container\">\n      <Header />\n\n      <GlobalStats\n        countriesData={countriesData}\n        hideDeaths={hideDeaths}\n        globalData={globalData} />\n\n      {globalData &&\n        <StatsSummary\n          globalData={globalData}\n          threshold={threshold} />\n      }\n\n      {countriesData &&\n        <Filter\n          countriesState={countriesData}\n          hide={hide}\n          hideDeaths={hideDeaths}\n          setFilter={setFilter}\n          sortCountriesData={sortCountriesData} \n          activeFilter={activeFilter}\n          threshold={threshold}\n          setSearchFilter={setSearchFilter} />\n      }\n\n      {countriesData &&\n        <ul className=\"list resetList componentSpacing\"> {\n          countriesData\n            .filter(c => c.country.includes(filterInput))\n            .map((item, i) => <ListItem itemData={item} activeFilter={activeFilter} hideDeaths={hideDeaths} key={i} />)\n        } </ul>\n      }\n\n      <div className=\"listNotice\">\n        <a href=\"https://github.com/NovelCOVID/API\" target=\"_blank\" alt=\"Link to Github\" rel=\"noopener noreferrer\">Data sources</a>\n      </div>\n\n       <Footer />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './main.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}